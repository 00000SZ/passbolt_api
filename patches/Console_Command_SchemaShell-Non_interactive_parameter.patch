diff --git a/app/Console/Command/SchemaShell.php b/app/Console/Command/SchemaShell.php
index 8faae68..8636b06 100644
--- a/app/Console/Command/SchemaShell.php
+++ b/app/Console/Command/SchemaShell.php
@@ -337,7 +337,7 @@ class SchemaShell extends AppShell {
 		$this->out("\n" . __d('cake_console', 'The following table(s) will be dropped.'));
 		$this->out(array_keys($drop));
 
-		if ($this->in(__d('cake_console', 'Are you sure you want to drop the table(s)?'), array('y', 'n'), 'n') === 'y') {
+		if ($this->params['force_drop'] || $this->in(__d('cake_console', 'Are you sure you want to drop the table(s)?'), array('y', 'n'), 'n') === 'y') {
 			$this->out(__d('cake_console', 'Dropping table(s).'));
 			$this->_run($drop, 'drop', $Schema);
 		}
@@ -345,7 +345,7 @@ class SchemaShell extends AppShell {
 		$this->out("\n" . __d('cake_console', 'The following table(s) will be created.'));
 		$this->out(array_keys($create));
 
-		if ($this->in(__d('cake_console', 'Are you sure you want to create the table(s)?'), array('y', 'n'), 'y') === 'y') {
+		if ($this->params['force_create'] || $this->in(__d('cake_console', 'Are you sure you want to create the table(s)?'), array('y', 'n'), 'y') === 'y') {
 			$this->out(__d('cake_console', 'Creating table(s).'));
 			$this->_run($create, 'create', $Schema);
 		}
@@ -494,6 +494,16 @@ class SchemaShell extends AppShell {
 			'help' => __d('cake_console', 'Force "generate" to create a new schema'),
 			'boolean' => true
 		);
+		$force_drop = array(
+			'help' => __d('cake_console', 'Force "drop table" to create a new schema'),
+			'boolean' => true,
+			'default' => null
+		);
+		$force_create = array(
+			'help' => __d('cake_console', 'Force "create table" to create a new schema'),
+			'boolean' => true,
+			'default' => null
+		);
 		$write = array(
 			'help' => __d('cake_console', 'Write the dumped SQL to a file.')
 		);
@@ -527,7 +537,7 @@ class SchemaShell extends AppShell {
 			))->addSubcommand('create', array(
 				'help' => __d('cake_console', 'Drop and create tables based on the schema file.'),
 				'parser' => array(
-					'options' => compact('plugin', 'path', 'file', 'name', 'connection', 'dry', 'snapshot'),
+					'options' => compact('plugin', 'path', 'file', 'name', 'connection', 'dry', 'snapshot', 'force_drop', 'force_create'),
 					'args' => array(
 						'name' => array(
 							'help' => __d('cake_console', 'Name of schema to use.')
